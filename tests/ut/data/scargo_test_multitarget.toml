[project]
name = "all_targets"
version = "0.1.0"
description = "Project description."
homepage-url = "www.hello-world.com"

bin_name = "all_targets"
target = ["atsam", "stm32", "x86", "esp32"]
build-env = "native"
docker-file = ".devcontainer/Dockerfile-custom"
docker-image-tag = "all_targets-dev:1.0"

cxxstandard = "17"

cflags   = "-Wall -Wextra"
cxxflags = "-Wall -Wextra"

in-repo-conan-cache = false

[profile.Debug]
cflags   = "-g"
cxxflags = "-g"

[profile.Release]
cflags   = "-O3 -DNDEBUG"
cxxflags = "-O3 -DNDEBUG"

[profile.RelWithDebInfo]
cflags   = "-O2 -g -DNDEBUG"
cxxflags = "-O2 -g -DNDEBUG"

[profile.MinSizeRel]
cflags   = "-Os -DNDEBUG"
cxxflags = "-Os -DNDEBUG"

[check]
exclude = []

[check.pragma]
exclude = []

[check.copyright]
description = '@copyright Copyright \(C\) \d{4} .* All rights reserved.'
exclude = []

[fix.copyright]
description = '''
/**
 * @copyright Copyright (C) 2025 <Company-Name>. All rights reserved.
 */
'''

[check.todo]
keywords = ["tbd", "todo", "TODO", "fixme"]
exclude = []

[check.cppcheck]
directories = []
suppress = []

[check.clang-format]
exclude = []

[check.clang-tidy]
exclude = []

[check.cyclomatic]
exclude = []

[tests]
cc  = "gcc"
cxx = "g++"

cflags   = "-Wall -Wextra -Og --coverage -fkeep-inline-functions -fkeep-static-consts"
cxxflags = "-Wall -Wextra -Og --coverage -fkeep-inline-functions -fkeep-static-consts"

gcov-executable = "" # Empty string -> use default gcov executable

# Underhood scargo use conan. All string valid for conan tool are valid here. eg "gtest/1.13.0"
[dependencies]
#general -> public conan dependencies of project they will be added to package info (eg. bianry dynamic linkage libary) they will be added also to scargo test.
general = [
]
#build -> private conan dependencies usedn only during build process(eg. private static linkage library)
build = [
]
#tool -> special conan "not library" dependencies like cmake/3.22.
tool = [
]
#test-> conan dependencies used only for testing targets
test = [
    "gtest/1.13.0"
]

[conan.repo]
#Passing conancenter here is not nessary as scargo adds it by default
#Below example of private binary artifacts repository
#my_artifactory = "https://my_artifactory/api/conan/conanlocal"

[esp32]
chip = "esp32"
extra_component_dirs = ['src']
partitions = [
    "nvs,      data, nvs,     0x9000,  0x4000,",
    "otadata,  data, ota,     0xd000,  0x2000,",
    "phy_init, data, phy,     0xf000,  0x1000,",
    "ota_0,    app,  ota_0,   0x10000, 0x180000,",
    "ota_1,    app,  ota_1,   0x190000,0x180000,",
    "spiffs,   data, spiffs,  0x310000,0x6000,",
]

[stm32]
chip = "STM32L496AG"
flash-start = 0x08000000

[atsam]
chip = "ATSAML10E16A"
cpu = "cortex-m23"


[scargo]
console-log-level = "INFO"
file-log-level = "WARNING"
update-exclude = []

[docker-compose]
ports = []