[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "scargo"
description = "C/C++ package and software development life cycle manager inspired by RUST cargo idea."
authors = [{ name = "Spyrosoft Solutions S.A.", email = "aak@spyro-soft.com" }]
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
    "Topic :: Software Development :: Embedded Systems",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dynamic = ["version"]
keywords = ["scargo", "Package manager", "C++"]
dependencies = [
    "clang==16.0.1.1",
    "cmake==3.25.2",
    "coloredlogs==15.0.1",
    "conan==2.0.13",
    "docker==6.0.1",
    "esptool==4.5.1",
    "jinja2==3.1.2",
    "libclang==16.0.0",
    "lizard==1.17.10",
    "pydantic==1.10.6",
    "toml==0.10.2",
    "tomlkit==0.11.6",
    "typer==0.9.0",
    "typing-extensions==4.6.0",
    "paramiko==3.3.1",
    "pyyaml==6.0",
]

[project.optional-dependencies]
dev = [
    "black==23.1.0",
    "coverage~=6.0",
    "flake8>=6.1.0",
    "flit==3.8.0",
    "gcovr>=5.2",
    "isort==5.11.4",
    "matplotlib",
    "mypy==1.6.1",
    "pre-commit",
    "pyclean==2.2.0",
    "pyelftools",
    "pyfakefs==5.3.2",
    "pylint==3.0.2",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-subprocess==1.5.0",
    "pytest==7.4.3",
    "pytest-lazy-fixture==0.6.3",
    "pytest-xdist==3.5.0",
    "pytest-order==1.2.0",
    "types-clang==0.14.3",
    "types-toml",
    "unittest-xml-reporting",
    "pyopenssl==23.2.0",
    "types-pyOpenSSL==23.2.0",
    "types-PyYAML==6.0.12.12",
]
doc = [
    "recommonmark",
    "sphinx-rtd-theme==1.1.1",
    "Sphinx",
    "sphinxcontrib-plantuml==0.24.1",
]

[project.urls]
Documentation = "https://spyro-soft.github.io/scargo/index.html"
Source = "https://github.com/spyro-soft/scargo"
Tracker = "https://github.com/Spyro-Soft/scargo/issues"

[project.scripts]
scargo = "scargo.cli:cli"

[tool.flit.sdist]
exclude = [
    "*.py",
    ".*",
    "docker-compose.yaml",
    "tests/",
    "common_dev/",
    "example_project/",
    "ci/",
    "docs/",
]

[tool.isort]
profile = "black"

[tool.pylint]
ignore-paths = ["example_project", "tests"]
max-line-length = 120
output-format = "colorized"

[tool.pylint.messages_control]
disable = [
    "C0103", # snake_case naming style, disallows names like "e" or "fs"
    "C0114",
    "C0115",
    "C0116", # disable missing docstring rules
    "R0801", # Simmilar lines
    "R0902", # too many instance attributes
    "R0903", # too few public methods
    "R0913", # too many arguments
    "W1203", # lazy % formatting in logging functions
]

[tool.pylint.extensions]
extension-pkg-whitelist = ["pydantic"]

[tool.mypy]
python_version=3.8
strict = true
disallow_any_unimported = true
no_implicit_optional = true
show_error_codes = true
explicit_package_bases = true
scripts_are_modules = false
exclude = ["conanfile.py"]

[[tool.mypy.overrides]]
module = "coloredlogs"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "docker"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "matplotlib.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "conan.*"
ignore_missing_imports = true
