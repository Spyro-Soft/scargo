# #
# Copyright (C) 2023 SpyroSoft Solutions S.A. All rights reserved.
# #

#
# DO NOT EDIT THIS FILE!
# This file is generated by `scargo update`.
#
{% if config.project.target.family == "esp32" %}
cmake_minimum_required(VERSION 3.14)
{% else %}
cmake_minimum_required(VERSION 3.16)
{% endif %}

{% if config.project.target.family == 'stm32' %}
{% include 'stm32.cmake.j2' %}
{% elif config.project.target.family == 'x86' %}
{% include 'x86.cmake.j2' %}
{% endif %}

set(CMAKE_CXX_STANDARD {{ config.project.cxxstandard }})
{% for key, value in config.project.cmake_variables.items() %}
set({{ key }} "{{ value }}")
{% endfor %}
{% for profile_name, profile in config.profiles.items() %}
    {% if profile.extras %}
# {{ profile_name }}
IF("${CMAKE_BUILD_TYPE}" STREQUAL "{{ profile_name }}")
        {% for key, value in profile.extras.items() %}
    SET({{ key }} {{ value }})
        {% endfor %}
ENDIF()
    {% endif %}
{% endfor %}

{% if config.project.lib_name %}
add_library({{ config.project.lib_name }} STATIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include/{{ config.project.lib_name|lower }}.h
)
add_library(spyro::{{ config.project.lib_name }} ALIAS {{ config.project.lib_name }})

target_include_directories({{ config.project.lib_name }}
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/include
    PRIVATE
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/src
)

{% endif %}
{% if config.project.target.family == "esp32" %}
{% include 'esp32.cmake.j2' %}
{% else %}
add_subdirectory(src)
{% endif %}

{% if config.project.lib_name %}
install(TARGETS {{ config.project.lib_name }} DESTINATION lib)
install(DIRECTORY include/ DESTINATION include)
{% endif %}
